package com.entity;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class CartEntity {

    @Id
    private Long userId;
    private Long cartId;
    private Integer totalItems;
    private Double totalCosts;
    private String products;

    // No-args constructor
    public CartEntity() {
    }

    // All-args constructor
    public CartEntity(Long userId, Long cartId, Integer totalItems, Double totalCosts, String products) {
        this.userId = userId;
        this.cartId = cartId;
        this.totalItems = totalItems;
        this.totalCosts = totalCosts;
        this.products = products;
    }

    // Getters and Setters
    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Long getCartId() {
        return cartId;
    }

    public void setCartId(Long cartId) {
        this.cartId = cartId;
    }

    public Integer getTotalItems() {
        return totalItems;
    }

    public void setTotalItems(Integer totalItems) {
        this.totalItems = totalItems;
    }

    public Double getTotalCosts() {
        return totalCosts;
    }

    public void setTotalCosts(Double totalCosts) {
        this.totalCosts = totalCosts;
    }

    public String getProducts() {
        return products;
    }

    public void setProducts(String products) {
        this.products = products;
    }

    // toString method
    @Override
    public String toString() {
        return "CartEntity{" +
                "userId=" + userId +
                ", cartId=" + cartId +
                ", totalItems=" + totalItems +
                ", totalCosts=" + totalCosts +
                ", products='" + products + '\'' +
                '}';
    }

    // Builder
    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long userId;
        private Long cartId;
        private Integer totalItems;
        private Double totalCosts;
        private String products;

        public Builder userId(Long userId) {
            this.userId = userId;
            return this;
        }

        public Builder cartId(Long cartId) {
            this.cartId = cartId;
            return this;
        }

        public Builder totalItems(Integer totalItems) {
            this.totalItems = totalItems;
            return this;
        }

        public Builder totalCosts(Double totalCosts) {
            this.totalCosts = totalCosts;
            return this;
        }

        public Builder products(String products) {
            this.products = products;
            return this;
        }

        public CartEntity build() {
            return new CartEntity(userId, cartId, totalItems, totalCosts, products);
        }
    }
}


----

public class Product {

    private Long productId;
    private String productName;
    private int quantity;
    private Double price;

    // No-args constructor
    public Product() {
    }

    // All-args constructor
    public Product(Long productId, String productName, int quantity, Double price) {
        this.productId = productId;
        this.productName = productName;
        this.quantity = quantity;
        this.price = price;
    }

    // Getters and Setters
    public Long getProductId() {
        return productId;
    }

    public void setProductId(Long productId) {
        this.productId = productId;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    // toString method
    @Override
    public String toString() {
        return "Product{" +
                "productId=" + productId +
                ", productName='" + productName + '\'' +
                ", quantity=" + quantity +
                ", price=" + price +
                '}';
    }

    // Builder pattern
    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long productId;
        private String productName;
        private int quantity;
        private Double price;

        public Builder productId(Long productId) {
            this.productId = productId;
            return this;
        }

        public Builder productName(String productName) {
            this.productName = productName;
            return this;
        }

        public Builder quantity(int quantity) {
            this.quantity = quantity;
            return this;
        }

        public Builder price(Double price) {
            this.price = price;
            return this;
        }

        public Product build() {
            return new Product(productId, productName, quantity, price);
        }
    }
}



------------


package com.model;

public class ShoppingCartRequest {

    private long productId;
    private Integer quantity;

    // No-args constructor
    public ShoppingCartRequest() {
    }

    // All-args constructor
    public ShoppingCartRequest(long productId, Integer quantity) {
        this.productId = productId;
        this.quantity = quantity;
    }

    // Getters and Setters
    public long getProductId() {
        return productId;
    }

    public void setProductId(long productId) {
        this.productId = productId;
    }

    public Integer getQuantity() {
        return quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    // Builder
    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private long productId;
        private Integer quantity;

        public Builder productId(long productId) {
            this.productId = productId;
            return this;
        }

        public Builder quantity(Integer quantity) {
            this.quantity = quantity;
            return this;
        }

        public ShoppingCartRequest build() {
            return new ShoppingCartRequest(productId, quantity);
        }
    }
}
-------

package com.model;

import java.util.List;

public class ShoppingCartResponse {

    private Long userId;
    private Long cartId;
    private Integer totalItems;
    private Double totalCosts;
    private List<Product> products;

    // No-args constructor
    public ShoppingCartResponse() {
    }

    // All-args constructor
    public ShoppingCartResponse(Long userId, Long cartId, Integer totalItems, Double totalCosts, List<Product> products) {
        this.userId = userId;
        this.cartId = cartId;
        this.totalItems = totalItems;
        this.totalCosts = totalCosts;
        this.products = products;
    }

    // Getters and Setters
    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Long getCartId() {
        return cartId;
    }

    public void setCartId(Long cartId) {
        this.cartId = cartId;
    }

    public Integer getTotalItems() {
        return totalItems;
    }

    public void setTotalItems(Integer totalItems) {
        this.totalItems = totalItems;
    }

    public Double getTotalCosts() {
        return totalCosts;
    }

    public void setTotalCosts(Double totalCosts) {
        this.totalCosts = totalCosts;
    }

    public List<Product> getProducts() {
        return products;
    }

    public void setProducts(List<Product> products) {
        this.products = products;
    }

    // toString method
    @Override
    public String toString() {
        return "ShoppingCartResponse{" +
                "userId=" + userId +
                ", cartId=" + cartId +
                ", totalItems=" + totalItems +
                ", totalCosts=" + totalCosts +
                ", products=" + products +
                '}';
    }

    // Builder
    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long userId;
        private Long cartId;
        private Integer totalItems;
        private Double totalCosts;
        private List<Product> products;

        public Builder userId(Long userId) {
            this.userId = userId;
            return this;
        }

        public Builder cartId(Long cartId) {
            this.cartId = cartId;
            return this;
        }

        public Builder totalItems(Integer totalItems) {
            this.totalItems = totalItems;
            return this;
        }

        public Builder totalCosts(Double totalCosts) {
            this.totalCosts = totalCosts;
            return this;
        }

        public Builder products(List<Product> products) {
            this.products = products;
            return this;
        }

        public ShoppingCartResponse build() {
            return new ShoppingCartResponse(userId, cartId, totalItems, totalCosts, products);
        }
    }
}

----

package com.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.model.Product;
import com.model.ShoppingCartRequest;
import com.model.ShoppingCartResponse;
import com.repo.ShopRepo;



@Service
public class ShopService {
	@Autowired
	private ShopRepo repo;
	@Autowired
	private RestTemplate restTemplate;
	
	
	public ShoppingCartResponse processAndSend(Long UserId,List<ShoppingCartRequest> shoppingCartRequests) {
		
		ObjectMapper mapper= new ObjectMapper();
		String productServiceURL="http://localhost:8090/products/getproducts/" +
		shoppingCartRequests.stream()
		.map(e-> String.valueOf(e.getProductId()))
		.collect(Collectors.joining(","));
		Product[] productArray= restTemplate.getForObject(productServiceURL,Product[].class);
		List<Product> psl=Arrays.asList(productArray);
		System.out.println(psl);
		return null;
		
	}
	
}
