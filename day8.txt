package com.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.entity.CartEntity;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.model.Product;
import com.model.ShoppingCartRequest;
import com.model.ShoppingCartResponse;
import com.repo.ShopRepo;



@Service
public class ShopService {
	@Autowired
	private ShopRepo repo;
	@Autowired
	private RestTemplate restTemplate;
	
	
	public ShoppingCartResponse processAndSend(Long UserId,List<ShoppingCartRequest> shoppingCartRequests) {
		
		ObjectMapper mapper= new ObjectMapper();
		String productServiceURL="http://localhost:8090/products/getproducts/" +
		shoppingCartRequests.stream()
		.map(e-> String.valueOf(e.getProductId()))
		.collect(Collectors.joining(","));
		Product[] productArray= restTemplate.getForObject(productServiceURL,Product[].class);
		List<Product> psl=Arrays.asList(productArray);
		
		double totalCosts=0.0;
		for(Product p:psl) {
			for(ShoppingCartRequest cr: shoppingCartRequests) {
				if(p.getProductId().equals(cr.getProductId())) {
					p.setQuantity(cr.getQuantity());
					totalCosts += p.getAmount()*cr.getQuantity();
					
				}
			}
		}
		CartEntity cartEntity=null;
		try {
			cartEntity=CartEntity.builder()
					.userId(UserId)
					.cartId((long)(Math.random()*Math.pow(10, 10)))
					.totalItems(psl.size())
					.totalCosts(totalCosts)
					.products(mapper.writeValueAsString(psl))
					.build();
			cartEntity=repo.save(cartEntity);
			}catch (Exception e) {}
		return ShoppingCartResponse.builder()
				.cartId(cartEntity.getCartId())
				.userId(cartEntity.getUserId())
				.totalItems(cartEntity.getTotalItems())
				.totalCosts(cartEntity.getTotalCosts())
				.products(psl)
				.build();
		
	}
	public List<ShoppingCartResponse> getShoppingCart(Long userId) {
        ObjectMapper mapper = new ObjectMapper();
        List<CartEntity> cartEntities = cartRepository.findByUserId(userId);
        List<ShoppingCartResponse> cartResponse = cartEntities.stream()
                .map(ce -> {
                    try {
                        return ShoppingCartResponse.builder()
                                .cartId(ce.getCartId())
                                .userId(ce.getUserId())
                                .totalItems(ce.getTotalItems())
                                .totalCost(ce.getTotalCost())
                                .products(mapper.readValue(ce.getProducts(), List.class))
                                .build();
                    } catch (JsonProcessingException e) {
                        throw new RuntimeException(e);
                    }
                }).collect(Collectors.toList());
        return cartResponse;
    }
}
----


package com.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.model.ShoppingCartRequest;
import com.model.ShoppingCartResponse;
import com.service.ShopService;

@RestController
@RequestMapping("/shopcart")
public class RestApp {
	@Autowired
	private ShopService service;

	@PostMapping("/{userid}/products")
	public ResponseEntity addProduct(@PathVariable Long userid, @RequestBody List<ShoppingCartRequest> reqProdList) {
		 
		ShoppingCartResponse cartResponse=service.processAndSend(userid, reqProdList);
		return new ResponseEntity(cartResponse,HttpStatus.CREATED);
	}
	
	@GetMapping("/{userid}")
	public ResponseEntity getShoppingCart(@PathVariable Long userid) {
		return ResponseEntity.ok(service.getShoppingCart(userid));
	}
}
